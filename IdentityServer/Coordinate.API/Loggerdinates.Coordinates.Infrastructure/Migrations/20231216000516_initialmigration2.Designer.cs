// <auto-generated />
using System;
using Loggerdinates.Coordinates.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Loggerdinates.Coordinates.Infrastructure.Migrations
{
    [DbContext(typeof(CoordinateDbContext))]
    [Migration("20231216000516_initialmigration2")]
    partial class initialmigration2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Loggerdinates.Coortinates.Domain.CoordinateAggregate.Coordinate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Coordinates", "Coordinate");
                });

            modelBuilder.Entity("Loggerdinates.Coortinates.Domain.CoordinateAggregate.Coordinate", b =>
                {
                    b.OwnsOne("Loggerdinates.Coortinates.Domain.CoordinateAggregate.CoordinateInformation", "CoordinateInformation", b1 =>
                        {
                            b1.Property<int>("CoordinateId")
                                .HasColumnType("integer");

                            b1.Property<string>("Latitude")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Longitude")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("CoordinateId");

                            b1.ToTable("Coordinates", "Coordinate");

                            b1.WithOwner()
                                .HasForeignKey("CoordinateId");
                        });

                    b.Navigation("CoordinateInformation")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
